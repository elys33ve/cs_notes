E = input -- lines per sets
e = log2(E)
s = input
S = 2^s sets
b = input
B = 2^b bytes per cache block


- get s, E, b, tracefile name from arguments

- open file and allocate space for structures
- get file contents


- get operation letter from input
- get address from input
- get size from input

--- convert addr from str to hex
--- get tag from address
--- get block offset
--- get set from addr
--- get valid bit


------------
// test files

make clean
make
./csim-ref -v -s 4 -E 1 -b 4 -t traces/yi2.trace
./csim -v -s 4 -E 1 -b 4 -t traces/yi2.trace

./csim-ref -v -s 4 -E 1 -b 4 -t traces/dave.trace
./csim -v -s 4 -E 1 -b 4 -t traces/dave.trace

./csim-ref -v -s 4 -E 1 -b 4 -t traces/yi.trace
./csim -v -s 4 -E 1 -b 4 -t traces/yi.trace

./csim-ref -v -s 4 -E 1 -b 4 -t traces/trans.trace
./csim -v -s 4 -E 1 -b 4 -t traces/trans.trace

./csim-ref -v -s 4 -E 1 -b 4 -t traces/long.trace
./csim -v -s 4 -E 1 -b 4 -t traces/long.trace




// test args
    // without verbose
./csim-ref -s 4 -E 1 -b 4 -t traces/dave.trace
./csim -s 4 -E 1 -b 4 -t traces/dave.trace

    // help
./csim-ref -h -s 4 -E 1 -b 4 -t traces/dave.trace
./csim -h -s 4 -E 1 -b 4 -t traces/dave.trace

    // missing arg
./csim-ref -v -s 4 -b 4 -t traces/dave.trace
./csim -v -s 4 -b 4 -t traces/dave.trace

    // bad filename
./csim-ref -v -s 4 -E 1 -b 4 -t traces/k.trace
./csim -v -s 4 -E 1 -b 4 -t traces/k.trace

    // no args
./csim-ref
./csim

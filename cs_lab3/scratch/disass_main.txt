Dump of assembler code for function main:
   0x0000000000001768 <+0>:	endbr64 
   0x000000000000176c <+4>:	push   %r14
   0x000000000000176e <+6>:	push   %r13
   0x0000000000001770 <+8>:	push   %r12
   0x0000000000001772 <+10>:	push   %rbp
   0x0000000000001773 <+11>:	push   %rbx
   0x0000000000001774 <+12>:	mov    %edi,%ebp
   0x0000000000001776 <+14>:	mov    %rsi,%rbx
   0x0000000000001779 <+17>:	lea    0xce4(%rip),%rsi        # 0x2464 <seghandler>
   0x0000000000001780 <+24>:	mov    $0xb,%edi
   0x0000000000001785 <+29>:	call   0x1320 <signal@plt>
   0x000000000000178a <+34>:	lea    0xc79(%rip),%rsi        # 0x240a <bushandler>
   0x0000000000001791 <+41>:	mov    $0x7,%edi
   0x0000000000001796 <+46>:	call   0x1320 <signal@plt>
   0x000000000000179b <+51>:	lea    0xd1c(%rip),%rsi        # 0x24be <illegalhandler>
   0x00000000000017a2 <+58>:	mov    $0x4,%edi
   0x00000000000017a7 <+63>:	call   0x1320 <signal@plt>
   0x00000000000017ac <+68>:	cmpl   $0x0,0x5c35(%rip)        # 0x73e8 <is_checker>
   0x00000000000017b3 <+75>:	jne    0x17db <main+115>
   0x00000000000017b5 <+77>:	lea    0x2a31(%rip),%r12        # 0x41ed
   0x00000000000017bc <+84>:	mov    0x5bbd(%rip),%rax        # 0x7380 <stdin@@GLIBC_2.2.5>
   0x00000000000017c3 <+91>:	mov    %rax,0x5c06(%rip)        # 0x73d0 <infile>
   0x00000000000017ca <+98>:	mov    $0x0,%r13d
   0x00000000000017d0 <+104>:	mov    $0x0,%r14d
   0x00000000000017d6 <+110>:	jmp    0x1868 <main+256>
   0x00000000000017db <+115>:	lea    0xd36(%rip),%rsi        # 0x2518 <sigalrmhandler>
   0x00000000000017e2 <+122>:	mov    $0xe,%edi
   0x00000000000017e7 <+127>:	call   0x1320 <signal@plt>
   0x00000000000017ec <+132>:	mov    $0x5,%edi
   0x00000000000017f1 <+137>:	call   0x12f0 <alarm@plt>
   0x00000000000017f6 <+142>:	lea    0x29e8(%rip),%r12        # 0x41e5
   0x00000000000017fd <+149>:	jmp    0x17bc <main+84>
   0x00000000000017ff <+151>:	mov    (%rbx),%rdi
   0x0000000000001802 <+154>:	call   0x1549 <usage>
   0x0000000000001807 <+159>:	lea    0x2c2f(%rip),%rsi        # 0x443d
   0x000000000000180e <+166>:	mov    0x5b73(%rip),%rdi        # 0x7388 <optarg@@GLIBC_2.2.5>
   0x0000000000001815 <+173>:	call   0x13c0 <fopen@plt>
   0x000000000000181a <+178>:	mov    %rax,0x5baf(%rip)        # 0x73d0 <infile>
   0x0000000000001821 <+185>:	test   %rax,%rax
   0x0000000000001824 <+188>:	jne    0x1868 <main+256>
   0x0000000000001826 <+190>:	mov    0x5b5b(%rip),%rcx        # 0x7388 <optarg@@GLIBC_2.2.5>
   0x000000000000182d <+197>:	lea    0x29be(%rip),%rdx        # 0x41f2
   0x0000000000001834 <+204>:	mov    $0x1,%esi
   0x0000000000001839 <+209>:	mov    0x5b60(%rip),%rdi        # 0x73a0 <stderr@@GLIBC_2.2.5>
   0x0000000000001840 <+216>:	call   0x1420 <__fprintf_chk@plt>
   0x0000000000001845 <+221>:	mov    $0x1,%eax
   0x000000000000184a <+226>:	jmp    0x192a <main+450>
   0x000000000000184f <+231>:	mov    $0x10,%edx
   0x0000000000001854 <+236>:	mov    $0x0,%esi
   0x0000000000001859 <+241>:	mov    0x5b28(%rip),%rdi        # 0x7388 <optarg@@GLIBC_2.2.5>
   0x0000000000001860 <+248>:	call   0x13e0 <strtoul@plt>
   0x0000000000001865 <+253>:	mov    %eax,%r14d
   0x0000000000001868 <+256>:	mov    %r12,%rdx
   0x000000000000186b <+259>:	mov    %rbx,%rsi
   0x000000000000186e <+262>:	mov    %ebp,%edi
   0x0000000000001870 <+264>:	call   0x13d0 <getopt@plt>
   0x0000000000001875 <+269>:	cmp    $0xff,%al
   0x0000000000001877 <+271>:	je     0x18de <main+374>
   0x0000000000001879 <+273>:	movsbl %al,%ecx
   0x000000000000187c <+276>:	sub    $0x61,%eax
   0x000000000000187f <+279>:	cmp    $0x10,%al
   0x0000000000001881 <+281>:	ja     0x18be <main+342>
   0x0000000000001883 <+283>:	movzbl %al,%eax
   0x0000000000001886 <+286>:	lea    0x29a3(%rip),%rdx        # 0x4230
   0x000000000000188d <+293>:	movslq (%rdx,%rax,4),%rax
   0x0000000000001891 <+297>:	add    %rdx,%rax
   0x0000000000001894 <+300>:	notrack jmp *%rax
   0x0000000000001897 <+303>:	mov    $0xa,%edx
   0x000000000000189c <+308>:	mov    $0x0,%esi
   0x00000000000018a1 <+313>:	mov    0x5ae0(%rip),%rdi        # 0x7388 <optarg@@GLIBC_2.2.5>
   0x00000000000018a8 <+320>:	call   0x1350 <strtol@plt>
   0x00000000000018ad <+325>:	mov    %eax,%r13d
   0x00000000000018b0 <+328>:	jmp    0x1868 <main+256>
   0x00000000000018b2 <+330>:	movl   $0x0,0x5aac(%rip)        # 0x7368 <notify>
   0x00000000000018bc <+340>:	jmp    0x1868 <main+256>
   0x00000000000018be <+342>:	mov    %ecx,%edx
   0x00000000000018c0 <+344>:	lea    0x2948(%rip),%rsi        # 0x420f
   0x00000000000018c7 <+351>:	mov    $0x1,%edi
   0x00000000000018cc <+356>:	mov    $0x0,%eax
   0x00000000000018d1 <+361>:	call   0x13b0 <__printf_chk@plt>
   0x00000000000018d6 <+366>:	mov    (%rbx),%rdi
   0x00000000000018d9 <+369>:	call   0x1549 <usage>
   0x00000000000018de <+374>:	mov    $0x0,%esi
   0x00000000000018e3 <+379>:	mov    %r13d,%edi
   0x00000000000018e6 <+382>:	call   0x15e7 <initialize_target>
   0x00000000000018eb <+387>:	cmpl   $0x0,0x5af6(%rip)        # 0x73e8 <is_checker>
   0x00000000000018f2 <+394>:	je     0x18fd <main+405>
   0x00000000000018f4 <+396>:	cmp    %r14d,0x5ae5(%rip)        # 0x73e0 <authkey>
   0x00000000000018fb <+403>:	jne    0x1933 <main+459>
   0x00000000000018fd <+405>:	mov    0x5ae1(%rip),%edx        # 0x73e4 <cookie>
   0x0000000000001903 <+411>:	lea    0x2918(%rip),%rsi        # 0x4222
   0x000000000000190a <+418>:	mov    $0x1,%edi
   0x000000000000190f <+423>:	mov    $0x0,%eax
   0x0000000000001914 <+428>:	call   0x13b0 <__printf_chk@plt>
   0x0000000000001919 <+433>:	mov    0x5a40(%rip),%rdi        # 0x7360 <buf_offset>
   0x0000000000001920 <+440>:	call   0x266a <stable_launch>
   0x0000000000001925 <+445>:	mov    $0x0,%eax
   0x000000000000192a <+450>:	pop    %rbx
   0x000000000000192b <+451>:	pop    %rbp
   0x000000000000192c <+452>:	pop    %r12
   0x000000000000192e <+454>:	pop    %r13
   0x0000000000001930 <+456>:	pop    %r14
   0x0000000000001932 <+458>:	ret    
   0x0000000000001933 <+459>:	mov    %r14d,%edx
   0x0000000000001936 <+462>:	lea    0x280b(%rip),%rsi        # 0x4148
   0x000000000000193d <+469>:	mov    $0x1,%edi
   0x0000000000001942 <+474>:	mov    $0x0,%eax
   0x0000000000001947 <+479>:	call   0x13b0 <__printf_chk@plt>
   0x000000000000194c <+484>:	mov    $0x0,%eax
   0x0000000000001951 <+489>:	call   0x203e <check_fail>
   0x0000000000001956 <+494>:	jmp    0x18fd <main+405>
